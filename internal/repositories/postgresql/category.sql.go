// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: category.sql

package postgresql

import (
	"context"
)

const getCategoryByName = `-- name: GetCategoryByName :one
SELECT id, name FROM "categories"
WHERE "name" = $1
`

func (q *Queries) GetCategoryByName(ctx context.Context, name string) (Category, error) {
	row := q.db.QueryRowContext(ctx, getCategoryByName, name)
	var i Category
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}

const insertCategory = `-- name: InsertCategory :one
INSERT INTO "categories" ("name")
VALUES ($1)
RETURNING id, name
`

func (q *Queries) InsertCategory(ctx context.Context, name string) (Category, error) {
	row := q.db.QueryRowContext(ctx, insertCategory, name)
	var i Category
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}
